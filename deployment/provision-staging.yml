#taken form https://github.com/mattupstate/ansible-tutorial/blob/master/devops/setup_server.yml
- hosts: staging
  user: ubuntu
  sudo: True

  vars:
      - user: ubuntu
      - app_name: powershame
  vars_files:
      - /home/jai/powershame/private_vars.yml

  tasks:
    - name: add nginx ppa
      action: apt_repository repo=ppa:nginx/stable state=present

    - name: install common packages needed for python application development
      action: apt pkg={{ item }} state=installed
      with_items:
        - libpq-dev
        - libxml2-dev
        - libfreetype6
        - libfreetype6-dev
        - zlib1g-dev
        - python-dev
        - python-setuptools
        - python-imaging
        - python-psycopg2
        - git-core
        - nginx
        - postgresql

    - name: install pip
      action: easy_install name=pip

    - name: install setuptools with pip
      action: pip name=$item state=present extra_args="--no-use-wheel --upgrade"
      with_items:
        - setuptools 

    - name: install various libraries with pip
      action: pip name=$item state=present
      with_items:
        - virtualenv
        - supervisor
        - uwsgi


    - name: remove default nginx site
      action: file path=/etc/nginx/sites-enabled/default state=absent

    - name: write nginx.conf
      action: template src=files/templates/nginx.conf dest=/etc/nginx/nginx.conf

    - name: create nginx ssl folder
      action: file dest=/etc/nginx/ssl state=directory owner=root

    - name: create supervisord config folder
      action: file dest=/etc/supervisor state=directory owner=root

    - name: create supervisord config
      action: template src=files/templates/supervisord.conf dest=/etc/supervisord.conf

    - name: create supervisord init script
      action: template src=files/templates/supervisord.sh dest=/etc/init.d/supervisord mode=0755

    - name: create postgres db
      postgresql_db: name={{ app_name }}
      sudo_user: postgres
      sudo: True

    - name: ensure user has access to database
      postgresql_user: db={{ app_name }} name={{ app_name }} password={{ db_pw }} priv=ALL
      sudo_user: postgres
      sudo: True

    - name: ensure user does not have unnecessary privilege
      postgresql_user: name={{ app_name }} role_attr_flags=NOSUPERUSER,NOCREATEDB
      sudo_user: postgres
      sudo: True

    - name: start supervisord service and have it run during system startup
      action: service name=supervisord state=started enabled=yes

    - name: start postgresql service and have it run during system startup
      action: service name=postgresql state=started enabled=yes

    - name: create .ssh folder
      action: file dest=/home/{{ user }}/.ssh state=directory owner={{ user }} mode=0700

    - name: copy known_hosts
      copy: src=files/ssh/known_hosts dest=/home/{{ user }}/.ssh/known_hosts owner={{ user }} mode=0600
