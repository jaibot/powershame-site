- hosts: staging
  user: ubuntu

  vars:
    app_name: powershame
    repo_url: git@bitbucket.com:jaibot/powershame-site.git
    repo_remote: bb
    repo_version: dev
    webapps_dir: /opt/
    install_dir: "{{ webapps_dir }}{{ app_name }}"
    venv_dir: "{{ install_dir }}/venv/"
    app_dir: "{{ install_dir }}/src/app/"
    server_name: www.powershame.com staging.powershame.com
    user: ubuntu
    private_files_root: /home/jai/powershame/www.powershame.com/

  tasks:
    - name: ensure root directory
      action: file dest={{ webapps_dir }}/{{ app_name }} state=directory owner={{ user }}
      sudo: True

    - name: ensure log directory
      action: file dest={{ webapps_dir }}/{{ app_name }}/log state=directory
      sudo: True

    - name: deploy code from repository
      action: git repo={{ repo_url }} dest={{ webapps_dir }}/{{ app_name }}/src/ remote={{ repo_remote }} version={{ repo_version }}

    - name: set config file
      copy: src=../config.py dest={{ webapps_dir }}/{{ app_name }}/config.py

    - name: install dependencies into virtualenv
      action: pip requirements={{ webapps_dir }}/{{ app_name }}/src/requirements.txt virtualenv={{ webapps_dir }}/{{ app_name }}/venv state=present

    - name: create supervisor program config
      action: template src=files/templates/supervisor-site.ini dest=/etc/supervisor/{{ app_name }}.ini
      notify:
        - restart app
      sudo: True

    - name: create nginx site config
      action: template src=files/templates/nginx_site.conf dest=/etc/nginx/sites-available/{{ app_name }}.conf
      notify:
        - restart nginx
      sudo: True

    - name: copy unified crt
      copy: src={{ private_files_root }}/powershame-unified.crt dest=/etc/nginx/ssl/powershame-unified.crt
      sudo: True

    - name: copy ssl key
      copy: src={{ private_files_root }}/www.powershame.com.pem dest=/etc/nginx/ssl/www.powershame.com.pem
      sudo: True

    - name: ensure log file
      copy: src=files/empty dest=/var/log/{{ app_name }}.log  owner={{ user }}
      sudo: True

    - name: create gunicorn config file
      action: template src=files/templates/gunicorn.py dest={{webapps_dir }}/{{ app_name }}/gunicorn.py owner={{ user }} mode=0600

    - name: link nginx config
      action: file src=/etc/nginx/sites-available/{{ app_name }}.conf dest=/etc/nginx/sites-enabled/{{ app_name }}.conf state=link
      sudo: True

    - name: upgrade db
      command: "{{ venv_dir }}/bin/python {{ app_dir }}/manage.py db upgrade --directory {{ app_dir }}/migrations"
      environment:
          POWERSHAME_CONFIG: "{{ webapps_dir }}/{{ app_name }}/config.py"


    - name: start app
      action: supervisorctl name={{ app_name }} state=restarted
      sudo: True

    - name: start nginx
      action: service name=nginx state=restarted
      sudo: True

  handlers:
    - name: restart app
      action: supervisorctl name={{ app_name }} state=restarted
      sudo: True

    - name: restart nginx
      action: service name=nginx state=restarted
      sudo: True
